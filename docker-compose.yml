version: "3.9"  #首先是版本号，别乱写，这个是和Docker版本有对应的
services:   #services里面就是我们所有需要进行编排的服务了
  net-work-disk-system:   #服务名称，随便起
    container_name: app_springboot-net-work-disk-system  #一会要创建的容器名称
    image: fakeder/net-work-disk-system:latest
    ports:
    - "8080:8080"
    volumes:
    - /root/docker/springboot/User/:/root/networkdisk/User/
    - /root/docker/springboot/download/:/root/networkdisk/download/
  mysql:
    container_name: app_mysql
    image: mysql:latest
    environment: #这里我们通过环境变量配置MySQL的root账号和密码
      MYSQL_ROOT_HOST: '%'   #登陆的主机，这里直接配置为'%'
      MYSQL_ROOT_PASSWORD: '123456'    #MySQL root账号的密码，别设定得太简单了
      MYSQL_DATABASE: 'networkdisk'    #在启动时自动创建的数据库
      TZ: 'Asia/Shanghai'    #时区
    volumes:
    # 数据挂载
    - /root/docker/mysql/data/ :/var/lib/mysql/
    # 配置挂载
    #- /root/mysql/conf/:/etc/mysql/conf.d/
    # 初始化目录挂载，注意此处我只跑了这个挂载，只是为了说明其他配置不应该数据初始化
    #- /root/docker/mysql/init :/docker-entrypoint-initdb.d/
    ports:
    - '3306:3306'    #把端口暴露出来，当然也可以不暴露，因为默认所有容器使用的是同一个网络
  redis:
    container_name: app_redis
    image: redis:latest
    ports:
    - '6379:6379'
    volumes:
    - /root/docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    - /root/docker/redis/redis_data/:/data
volumes:
  data:
    external: true